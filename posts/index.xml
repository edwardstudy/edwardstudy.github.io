<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Edwardesire</title><link>/posts/</link><description>Recent content in Posts on Edwardesire</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="https://www.edwardesire.com/">Edward Desire&lt;/a></copyright><lastBuildDate>Mon, 13 Dec 2021 16:00:48 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>k8s资源拓扑感知——资源分配</title><link>/posts/k8s-resources-topology-manager/</link><pubDate>Mon, 13 Dec 2021 16:00:48 +0800</pubDate><guid>/posts/k8s-resources-topology-manager/</guid><description>NUMA是什么 非统一内存访问架构（NUMA，Non-uniform memory access）是一种共享内存架构。与之相对的是统一内存访问架构（UMA，Unifo</description></item><item><title>多集群调度</title><link>/posts/multi-cluster-scheduling/</link><pubDate>Sun, 14 Nov 2021 04:30:48 +0800</pubDate><guid>/posts/multi-cluster-scheduling/</guid><description>Kubernetes是一个容器编排平台，用于调度、部署和管理容器化应用。并且经过几年的发展，k8s已经成为事实上的容器编排平台标准。集群是k8s架构的</description></item><item><title>集群内负载调度方案调研</title><link>/posts/load-scheduling-brief/</link><pubDate>Mon, 24 May 2021 01:03:36 +0000</pubDate><guid>/posts/load-scheduling-brief/</guid><description>背景 资源调度是容器云平台中最核心的功能之一。为了满足各业务线的资源需求，调度系统需要选择合适的集群分配计算资源，支撑业务服务的运行。 Kubernete</description></item><item><title>解决Kubernetes admission webhook timeout error</title><link>/posts/jie-jue-kubernetes-admission-webhook-timeout-error/</link><pubDate>Tue, 30 Jun 2020 01:15:56 +0000</pubDate><guid>/posts/jie-jue-kubernetes-admission-webhook-timeout-error/</guid><description>最近在做cluster chaos test，我们的功能组件出现不可用的情况。原因是Kubernetes admission webhook在执行中出现连接拒绝访问和timeout的</description></item><item><title>[转载]How to easily deploy Cloud Foundry applications on a Kubernetes cluster</title><link>/posts/how-to-easily-deploy-cloud-foundry-applications-on-a-kubernetes-cluster/</link><pubDate>Wed, 29 Jan 2020 03:08:00 +0000</pubDate><guid>/posts/how-to-easily-deploy-cloud-foundry-applications-on-a-kubernetes-cluster/</guid><description>本人在IBM Developer发表了一篇关于cf-operator的介绍。相比原文，内容更加简单易懂。这里也提一嘴cf-o当前的状态。首先，第一个GA</description></item><item><title>cf-operator的介绍</title><link>/posts/intro-of-cf-operator/</link><pubDate>Fri, 06 Sep 2019 15:21:18 +0000</pubDate><guid>/posts/intro-of-cf-operator/</guid><description>cf-operator马上就要在近期宣布beta release。beta版会实现在Kuberntes上部署Cloud Foundry或者BOSH rele</description></item><item><title>Kubernetes编程范式——Controller pattern</title><link>/posts/kubernetesbian-controller-pattern/</link><pubDate>Tue, 14 May 2019 06:50:13 +0000</pubDate><guid>/posts/kubernetesbian-controller-pattern/</guid><description>引子 Kubernetes的定位是非常明确和简单的，就是容器的编排与调度管理的系统。Kubernetes所关注的核心就是容器（Container）。Ku</description></item><item><title>Intro Operator</title><link>/posts/intro-operator/</link><pubDate>Mon, 07 Jan 2019 15:02:42 +0000</pubDate><guid>/posts/intro-operator/</guid><description>What is Operator 我们知道容器技术的发展带来了开发流程的简化：开发者不再需要费尽心力地将应用部署到不同环境下，真正所要做的只需完成核心业务的开发然后构建应用的镜像</description></item><item><title>Golang的Test coverage配置</title><link>/posts/golang-test-coverage/</link><pubDate>Sun, 27 Aug 2017 15:31:38 +0000</pubDate><guid>/posts/golang-test-coverage/</guid><description>Test coverage是作为发现未被测试覆盖的代码的手段。 传统的代码测试覆盖方法有：函数覆盖、语句覆盖、决策覆盖和条件覆盖。函数覆盖和语句覆盖都是指函数或</description></item><item><title>双机环境部署Kubernetes</title><link>/posts/deploy-kubernetes-by-kubeadm/</link><pubDate>Sun, 27 Aug 2017 08:56:15 +0000</pubDate><guid>/posts/deploy-kubernetes-by-kubeadm/</guid><description>本文使用kubeadm在虚机上部署一master一node的Kubernetes（k8s）集群。 0x01 环境 首先是创建环境，笔者使用的是两台8核8G内存的虚</description></item><item><title>OS X下运行sudo go command</title><link>/posts/os-x-run-sudo-go-commad/</link><pubDate>Tue, 22 Aug 2017 14:10:07 +0000</pubDate><guid>/posts/os-x-run-sudo-go-commad/</guid><description>写code的时候遇到需要修改/etc/hosts的情况，这个文件需要root权限才能修改。在container上能够成功运行，而在Mac本地调试时遇到</description></item><item><title>BOSH CLI 部署流程</title><link>/posts/dive-into-bosh-cli-workflow/</link><pubDate>Sat, 19 Aug 2017 16:46:48 +0000</pubDate><guid>/posts/dive-into-bosh-cli-workflow/</guid><description>0x00 Intro 本文档翻译的内容来自官方文档 描述BOSH Client部署环境的流程，包括安装CPI、创建VM、创建disk、挂载disk等操作。 0x01. 验证配置文件ma</description></item><item><title>shell环境设置方法纪要</title><link>/posts/shell-env-setting-beginner/</link><pubDate>Wed, 05 Apr 2017 15:18:20 +0000</pubDate><guid>/posts/shell-env-setting-beginner/</guid><description>我们从下面这段脚本说起。 #!/usr/bin/env bash set -e -x source bosh-softlayer-tools/ci/tasks/utils.sh check_param deploy_name check_param data_center_name check_param private_vlan_id check_param public_vlan_id deployment_dir=&amp;quot;${PWD}/deployment&amp;quot; mkdir -p $deployment_dir 首先是env和set命令。env命令可以打印环境变量，也可以用env来执行程序。这里就是</description></item><item><title>加快DOM加载的时间</title><link>/posts/speed-up-dom-content-load/</link><pubDate>Tue, 04 Apr 2017 05:30:10 +0000</pubDate><guid>/posts/speed-up-dom-content-load/</guid><description>2017年4月1日，本博客升级至0.11.7版本的最新Ghost Blog。升级做了很多微小的工作，但是花的时间还是比较多。 升级node环境：v6.10</description></item><item><title>从Concourse的一个例子讲述Pipeline的配置</title><link>/posts/set-concourse-pipeline-from-another-example/</link><pubDate>Wed, 29 Mar 2017 15:52:41 +0000</pubDate><guid>/posts/set-concourse-pipeline-from-another-example/</guid><description>如图上所描述，黑盒就是每个resources，带颜色的盒子就是jobs，不同颜色代表起build的情况。实线代表没有trigger的resource，</description></item><item><title>Diego介绍</title><link>/posts/diego-intro/</link><pubDate>Thu, 16 Mar 2017 15:02:03 +0000</pubDate><guid>/posts/diego-intro/</guid><description>Diego是Cloud Foundry（以下简称cf）的运行时架构。它用来代替来版本的DEA（Droplet Execution Agent）和HM9000（Health M</description></item><item><title>Concourse学习：介绍和实践</title><link>/posts/concourse-study-intro-and-tutorial/</link><pubDate>Tue, 14 Mar 2017 15:07:48 +0000</pubDate><guid>/posts/concourse-study-intro-and-tutorial/</guid><description>Concourse is what Concourse是起到CI（Continuous Integration，持续集成）作用的集成工具。而CI强调的是开发人员提交新代码后，立刻进行</description></item><item><title>Cloud Foundry：主要组件介绍</title><link>/posts/cloud-foundry-components-intro/</link><pubDate>Mon, 13 Mar 2017 15:53:39 +0000</pubDate><guid>/posts/cloud-foundry-components-intro/</guid><description>Cloud Foundry Cloud Foundry（以下称为cf）是PaaS中的一种，其提供抽象IaaS提供平台服务。可以用一句话总结cf的特性：“这是我的代码，给我在云平台上跑。</description></item><item><title>实验室简明mongoDB用户体验指南·续——查询</title><link>/posts/user-experience-of-mongodb-query/</link><pubDate>Sun, 18 Dec 2016 14:54:03 +0000</pubDate><guid>/posts/user-experience-of-mongodb-query/</guid><description>上篇： 2015-12-22 blog: 从MongoDB入门到编写数据库相关API 本指南延续上篇的内容，带领大家使用MongoDB Node.js Driver进行应用开发。 Node.js Driver与Mon</description></item><item><title>GraphQL Resovler的执行与实践</title><link>/posts/graphql-resovler-execution-and-practice/</link><pubDate>Wed, 30 Nov 2016 03:19:30 +0000</pubDate><guid>/posts/graphql-resovler-execution-and-practice/</guid><description>本文首先介绍GraphQL Server对于查询的执行过程，然后结合实际开发使用GraphQL的相关特性。 GraphQL Execution 在执行查询前，GraphQL会先通过类型系</description></item><item><title>GraphQL：一种不同于REST的接口风格</title><link>/posts/experimental-graphql/</link><pubDate>Wed, 23 Nov 2016 14:47:10 +0000</pubDate><guid>/posts/experimental-graphql/</guid><description>从去年开始，JS算是完全踏入ES6时代。在React相关项目中接触到了一些ES6的语法。这次接着GraphQL这种新型的接口风格，从后端的角度接触ES</description></item><item><title>Gossip协议</title><link>/posts/the-intro-of-gossip-protocol/</link><pubDate>Sun, 20 Nov 2016 05:41:00 +0000</pubDate><guid>/posts/the-intro-of-gossip-protocol/</guid><description>Gossip是一种去中心化、容错并保证最终一致性的协议。 Background：分布式环境 Gossip是为了解决分布式遇到的问题而设计的。由于服务和数据</description></item><item><title>TypeError还是ReferenceError——研究生第二学年总结</title><link>/posts/referenceerrorhuan-shi-typeerror/</link><pubDate>Fri, 11 Nov 2016 14:26:00 +0000</pubDate><guid>/posts/referenceerrorhuan-shi-typeerror/</guid><description>ReferenceError同作用域判别失败相关，而TypeError则代表作用域判别成功了，但是对结果的操作是非法或不合理的。 这句话是在《你不知道的</description></item><item><title>兰州CCF大数据会议</title><link>/posts/ccf-big-data-conf-evening/</link><pubDate>Sun, 30 Oct 2016 12:27:58 +0000</pubDate><guid>/posts/ccf-big-data-conf-evening/</guid><description>上一次参加学术会议是和迪总在天津参加可视化会议visual-101。这次是跑到兰州参加CCF Big Data会议。 对我来说比较有意义的两个报告是：《大数据分</description></item><item><title>时间维度的数据分析案例</title><link>/posts/data-analysis-example-with-time-dimension/</link><pubDate>Sun, 30 Oct 2016 10:54:14 +0000</pubDate><guid>/posts/data-analysis-example-with-time-dimension/</guid><description>维度是用于在不同角度描述事物特征的概念，比如在时间维度上分析数据就是一种常见的方法。时间维度一般包含年、月、日等多个层次，每个层次都有与任务相关的属性</description></item><item><title>Memcache的使用</title><link>/posts/python-use-memcache/</link><pubDate>Sun, 04 Sep 2016 10:31:22 +0000</pubDate><guid>/posts/python-use-memcache/</guid><description>Memcache Memcache 是一种简单的内存缓存工具，通过将高频率出现的请求结果存储在内存中来减少读取数据库的次数或者较长地逻辑处理任务。最终提高整个应用服务的响应速度。 Me</description></item><item><title>ORM: Peewee 实践</title><link>/posts/peewee-practice/</link><pubDate>Wed, 24 Aug 2016 15:21:53 +0000</pubDate><guid>/posts/peewee-practice/</guid><description>Peewee是Python的RDBMS ORM库。与node的mongoose之于MongoDB一样，在数据库上面封装一层来抽象数据库操作。在编写业务逻</description></item><item><title>Python: 编写面向对象的代码</title><link>/posts/python-beginner/</link><pubDate>Sun, 14 Aug 2016 03:11:38 +0000</pubDate><guid>/posts/python-beginner/</guid><description>面向过程 程序应该是非常抽象的，就像“下载网页、计算频率、打印费波拉悉数列”一样易懂。 就拿随手遇到的项目来说。在数据预处理工作中，目标服务器以*.jso</description></item><item><title>Hadoop实验环境的搭建：standalone&amp;pesudo cluster</title><link>/posts/hadoop-101-install-hadoop/</link><pubDate>Mon, 04 Jul 2016 06:53:08 +0000</pubDate><guid>/posts/hadoop-101-install-hadoop/</guid><description>这周结束前完成了Hadoop的本机配置，由于权限的原因还引发了一些小插曲。总之在最后完成了环境的安装。本机的配置为RHEL(RedHat Enterprise Linux) 6.7 添加用户</description></item><item><title>IFE-Task-04:定位和居中问题</title><link>/posts/ife-task-04-position-and-centering/</link><pubDate>Sun, 05 Jun 2016 05:05:42 +0000</pubDate><guid>/posts/ife-task-04-position-and-centering/</guid><description>这次的任务是实现下图中灰色元素居中，黄色扇形元素始终在贴附在容器的边框内。 理论知识 定位元素上篇文章讲过，这里再相互比较。 | static | relative | absolute | fixed | | ----------- | ----------------- | ----------------------</description></item><item><title>IFE-Task-03:三栏式布局</title><link>/posts/ife-task-03-three-column-layout/</link><pubDate>Sun, 29 May 2016 14:20:25 +0000</pubDate><guid>/posts/ife-task-03-three-column-layout/</guid><description>前端的学习需要更多的实践和思考。百度前端技术学院是一个不错的学习地方，其通过任务驱动前端学习者实践和思考。其官网IFE已经结束报名，不过还是可以自行练</description></item><item><title>mongoDB去重操作性能指标</title><link>/posts/mongodb-duplicate-removal-aggregatioin-index/</link><pubDate>Wed, 18 May 2016 08:22:55 +0000</pubDate><guid>/posts/mongodb-duplicate-removal-aggregatioin-index/</guid><description>最近刚完成mongoDB的压力测试，单集合内拥有2亿条数据。2亿多的数据量跑一次聚合操作会是怎么样的结果呢？ 我们的测试环境还是老机器配置（5台分片集群</description></item><item><title>Book Reader:你不知道的JavaScript(Part Two)：this和对象原型</title><link>/posts/book-reader-you-dont-konw-js-part-two/</link><pubDate>Thu, 12 May 2016 15:22:31 +0000</pubDate><guid>/posts/book-reader-you-dont-konw-js-part-two/</guid><description>书接上回，在了解作用域和闭包的内容后，我们继续学习JS两个重要的部分：this关键字和对象原型。我们首先看个例子。如下代码，我们想通过this获得ob</description></item><item><title>HTML5:web语义化与SEO</title><link>/posts/html5-semantic-web-and-seo/</link><pubDate>Thu, 05 May 2016 01:04:18 +0000</pubDate><guid>/posts/html5-semantic-web-and-seo/</guid><description>标签的语义认知是HTML5中的一个内容，下图就算HTML5中的元素。 按照元素的默认表现形式还可以分为：块、行内（内联）、内联块3类元素。 块元素：&amp;lt</description></item><item><title>Book Reader:你不知道的JavaScript(Part One)：作用域和闭包</title><link>/posts/book-reader-you-dont-konw-js-part-one/</link><pubDate>Sun, 01 May 2016 05:59:56 +0000</pubDate><guid>/posts/book-reader-you-dont-konw-js-part-one/</guid><description>这本书是翻译的Kyle Simpson的《You Don&amp;rsquo;t Know JS》上半部分。主要包括：作用域和闭包、this和对象原型。 #第一部分 作用域和闭包 编译型语言在编译过</description></item><item><title>博客迁移到ECS</title><link>/posts/another-blog-at-ecs/</link><pubDate>Sat, 30 Apr 2016 09:32:20 +0000</pubDate><guid>/posts/another-blog-at-ecs/</guid><description>为什么迁移到ECS 作为国内模仿AWS做得最好的阿里云，我是一直很满意的。其ECS在以前的项目中也有用到，自己的个人博客还可以使用ACE，我也写过相关部</description></item><item><title>在Docker搭建Node.js+mongoDB开发环境</title><link>/posts/docker/</link><pubDate>Mon, 25 Apr 2016 08:29:19 +0000</pubDate><guid>/posts/docker/</guid><description>这周通过docker将整个技术栈更新一下，首先介绍Docker的基本概念。 Docker是在LXC上构建的容器引擎。我这里主要讲起当作更加灵巧的虚拟机用</description></item><item><title>Paper Reader:Analysis Farm: A Cloud-based Scalable Aggregation and Query Platform for Network Log Analysis</title><link>/posts/paper-reader-analysis-farm-a-cloud-based-scalable-aggregation-and-query-platform-for-network-log-analysis/</link><pubDate>Tue, 19 Apr 2016 02:43:53 +0000</pubDate><guid>/posts/paper-reader-analysis-farm-a-cloud-based-scalable-aggregation-and-query-platform-for-network-log-analysis/</guid><description>这篇论文的主要内容是实现了要给日志分析的原型系统，其最底层使用OpenStack虚拟，数据存储层使用mongoDB。文中通过几个实验阐述了这一套架构的</description></item><item><title>Paper Reader:Analysis of range-based key properties for sharded cluster of MongoDB</title><link>/posts/paper-reader-analysis-of-range-based-key-properties-for-sharded-cluster-of-mongodb/</link><pubDate>Sat, 09 Apr 2016 08:55:19 +0000</pubDate><guid>/posts/paper-reader-analysis-of-range-based-key-properties-for-sharded-cluster-of-mongodb/</guid><description>前述很多mongoDB集群的使用和性能优化，发现一些还有可以优化因子值得好好研究。本文首先补充一直没有提到但已经使用了好久的分片集群的知识，然后再贴上</description></item><item><title>北京3月26日NodeParty分享会总结（Node.js全栈、探针监控、Docker node）</title><link>/posts/beijing-nodeparty/</link><pubDate>Thu, 07 Apr 2016 08:13:19 +0000</pubDate><guid>/posts/beijing-nodeparty/</guid><description>上周参加了北京的NodeParty，收获还是有的。先将学到的总结，并补充一些node.js的内容。 #1. 全栈工程师之路 首先ppt奉上。演讲者为moajs的</description></item><item><title>越过大山和mongoDB查询操作的坑</title><link>/posts/a-mountain-to-climb-mongodb-index-query/</link><pubDate>Mon, 28 Mar 2016 11:41:13 +0000</pubDate><guid>/posts/a-mountain-to-climb-mongodb-index-query/</guid><description>本周在2亿数据集上跑mapreduce（以下简称MR）和aggreation framework（AF）计算，但处理的速度非常慢。本文从索引入手寻找解决</description></item><item><title>MongoDB MapReduce实践</title><link>/posts/mongodb-mapreduce-example/</link><pubDate>Sat, 19 Mar 2016 08:20:43 +0000</pubDate><guid>/posts/mongodb-mapreduce-example/</guid><description>上回说到采用mongoDB自带的Aggregation功能来处理数据，但我们发现当数据量大时（1000w records）执行时间非常长。并且处理数据的</description></item><item><title>MongoDB Aggregation实践</title><link>/posts/mongdb-aggregation-example/</link><pubDate>Thu, 03 Mar 2016 12:56:34 +0000</pubDate><guid>/posts/mongdb-aggregation-example/</guid><description>内容为依据实验室项目需求来使用MongoDB聚合操作来将处理的数据存到集合中。 数据聚合 mongoDB的数据聚合使用了聚合管道（Aggregation P</description></item><item><title>部署有身份验证的mongoDB</title><link>/posts/usage-of-basic-authentication-and-authorization-of-mongodb/</link><pubDate>Wed, 13 Jan 2016 12:35:11 +0000</pubDate><guid>/posts/usage-of-basic-authentication-and-authorization-of-mongodb/</guid><description>mongoDB默认情况下是不需要身份认证的，但是处于生产环境安全的考虑，还是不能省去这一步的。本文将在这篇文章所述环境下部署带身份认证的mongoDB</description></item><item><title>从MongoDB入门到编写数据库相关API</title><link>/posts/code-to-meanjs/</link><pubDate>Tue, 22 Dec 2015 15:45:55 +0000</pubDate><guid>/posts/code-to-meanjs/</guid><description>这篇文章为实验室开会本人讲解mongoDB的讲义，主要讲述两个内容：MongoDB的入门和Nodejs编写相关API入门。内容比较简单，但是实践性比较</description></item><item><title>蓝噪声取样(Blue noise sampling) 相关知识</title><link>/posts/intro-blue-noise-sampling/</link><pubDate>Tue, 01 Dec 2015 13:17:54 +0000</pubDate><guid>/posts/intro-blue-noise-sampling/</guid><description>论文方面涉及的知识点，果然一下就遇到脑容量的瓶颈。嗯，加快进度憋论文。 &amp;lsquo;with minimal low frequency components and no concentrated spikes in energy.&amp;rsquo; 蓝噪声的特征：最小限量的低频成分，能量峰值也没有提供。这意</description></item><item><title>核密度估计(KDE) 相关知识</title><link>/posts/intro-kernel-density-estimate/</link><pubDate>Sun, 29 Nov 2015 01:54:16 +0000</pubDate><guid>/posts/intro-kernel-density-estimate/</guid><description>这周忙着写论文，技术实践这边就怠慢了，都是些修修补补的工作。比较有意思的就是接触到数据分析中的核密度估计方法。现将相关知识总结如下。(12/23添加密</description></item><item><title>Paper Reader:Visual Abstraction and Exploration of Multi-class Scatterplots</title><link>/posts/reading-paper-visual-abstraction-and-exploration-of-multi-class-scatterplots/</link><pubDate>Sat, 21 Nov 2015 12:14:33 +0000</pubDate><guid>/posts/reading-paper-visual-abstraction-and-exploration-of-multi-class-scatterplots/</guid><description>接着上一篇文章，探索密集地理数据可视化的优化。这次从论文上下手。以浙大博士陈海东写的《Visual Abstraction and Exploration of Multi-class Scatterplots》入手。这篇文章首</description></item><item><title>密集型地理数据可视化方案探索</title><link>/posts/search-and-explore-dot-map/</link><pubDate>Mon, 09 Nov 2015 13:04:18 +0000</pubDate><guid>/posts/search-and-explore-dot-map/</guid><description>最近师哥给的任务是地理数据可视化的研究，首先将现有情况说明清除。我们拿到的数据不是很多，但由于数据的特点，在可视化过程中可能会出现下图这种状况，地理标</description></item><item><title>在Ghost Blog上尝试输出数学公式</title><link>/posts/try-to-display-mathematical-equations-in-ghost/</link><pubDate>Sun, 08 Nov 2015 16:02:23 +0000</pubDate><guid>/posts/try-to-display-mathematical-equations-in-ghost/</guid><description>最近在看论文，做笔记的时候就发现公式的记录比较麻烦。模模糊糊知道有个Tex还有LaTex的工具。决定在有必要将公式记录下来是可以使用，然后就进行了工具</description></item><item><title>Paper Reader:Knowledge Generation Model for Visual Analytics</title><link>/posts/reading-paper-knowledge-generation-model-for-visual-analytics/</link><pubDate>Tue, 03 Nov 2015 12:52:49 +0000</pubDate><guid>/posts/reading-paper-knowledge-generation-model-for-visual-analytics/</guid><description>这篇论文[1]先阐述了知识产生模型，然后在现有系统上的佐证其模型的适用性，最后是总结以及展望下一步工作，中间穿插着很多其他模型、工具、理论。我的阅读侧</description></item><item><title>MongoBD+Solr全文搜索的历程</title><link>/posts/full-text-search-of-mongodb-with-solr/</link><pubDate>Mon, 26 Oct 2015 15:04:26 +0000</pubDate><guid>/posts/full-text-search-of-mongodb-with-solr/</guid><description>当存储到数据库中的数据涉及到文本，针对文本的搜索需求就应运而生。MongoDB也支持文本的搜索，不过很可惜的是，MongoDB的$text不支持中文分</description></item><item><title>使用Async进行流程控制</title><link>/posts/controller-of-async-function/</link><pubDate>Fri, 23 Oct 2015 13:26:06 +0000</pubDate><guid>/posts/controller-of-async-function/</guid><description>Async[1]提供了一些使用的工具，比如对象操作以及流程控制。我使用它的原因主要是解决js中回调函数嵌套过多的问题，在一边使用一边学习中习得了更多的</description></item><item><title>MongoDB更新操作符的实践</title><link>/posts/mongodb-update-operators-apply/</link><pubDate>Tue, 20 Oct 2015 14:55:40 +0000</pubDate><guid>/posts/mongodb-update-operators-apply/</guid><description>和查询操作符类似，更新操作符处理最复杂的对象也是数组。我们按照上一篇文章的方法，先总结我所用到的操作符，再结合项目中遇到的实例组合使用操作符。 ####1. 字段更</description></item><item><title>MongoDB查询以及投影操作符的实践</title><link>/posts/mongodb-query-and-projection-operators-apply/</link><pubDate>Sun, 18 Oct 2015 05:18:44 +0000</pubDate><guid>/posts/mongodb-query-and-projection-operators-apply/</guid><description>当使用MongoDB提供复制操作时，需要简单的CURD操作基础上使用一些操作符(如同$eq这样的操作符)，mongoDB官网文档[1]有其详细介绍。需</description></item><item><title>MongoDB/SQL Server增量同步方案</title><link>/posts/mongodb-fetch-sql-server-change-data-capture/</link><pubDate>Fri, 16 Oct 2015 14:40:13 +0000</pubDate><guid>/posts/mongodb-fetch-sql-server-change-data-capture/</guid><description>由于SQL Server的特殊性，目前市面上没有成熟开源的SQL Server/MongoDB同步软件，可行方案需要采用软件编写的方式才能实现该功能。通过</description></item><item><title>初识Promise</title><link>/posts/introduction-of-promise/</link><pubDate>Fri, 25 Sep 2015 09:49:44 +0000</pubDate><guid>/posts/introduction-of-promise/</guid><description>对于mongoBD的异步控制，在项目实践中使用了async库来控制复杂的异步回调函数处理。很有幸参加i5ting老师的《Node.js最新技术栈之Pr</description></item><item><title>Coursera Data-analysis001:Getting Your Research Project Started</title><link>/posts/coursera-classgetting-your-research-project-started/</link><pubDate>Sun, 20 Sep 2015 06:48:40 +0000</pubDate><guid>/posts/coursera-classgetting-your-research-project-started/</guid><description>After check five codebooks are provided, I choose use the GapMind data sets and then put some relevant indicators into my research project.
first topic of interest After read GapMinder codebook, I&amp;rsquo;m interested in female employee. Think about whether female employee rate and female literacy rate are associated. According to common sense, the relationship between them is positive correlation. If true, I am most interested in the degree.
second topic to explore Maybe other variables also influence the female employee rate, I choose the urban rate, female salaried employees rate, female first marriage age and gross employ rate.</description></item><item><title>Web应用分页功能的简单实现</title><link>/posts/pagination-with-mongoose/</link><pubDate>Tue, 15 Sep 2015 09:25:53 +0000</pubDate><guid>/posts/pagination-with-mongoose/</guid><description>Web应用的一个简单分页功能，前端直接使用bootstrap的Pagination指令，后端通过nodejs的mongoose驱动skip()和lim</description></item><item><title>我们的那个朋友确实不懂技术——研究生第一学年总结</title><link>/posts/we-need-a-technician/</link><pubDate>Mon, 14 Sep 2015 05:31:40 +0000</pubDate><guid>/posts/we-need-a-technician/</guid><description>耐心是美德，饕餮是罪过，无疑也适用于此，信息洪流。 ——摘自《信息简史》 现在是2015年9月14日，时间过得越来越快，特别怀念小时候在凉席上一睡就是一下</description></item><item><title>可视化之旅</title><link>/posts/visual-101/</link><pubDate>Mon, 14 Sep 2015 01:42:19 +0000</pubDate><guid>/posts/visual-101/</guid><description>八月份去参加了可视化学习，先将学习总结贴上来。 ####Day 1 第一天到达北大的二教上课，首先进行的是学员的自我介绍。大家基本上都是研究生以上，并且可视化方面的水平</description></item><item><title>Node.js的试炼:Email的获取</title><link>/posts/node-email-trial/</link><pubDate>Thu, 25 Jun 2015 15:50:30 +0000</pubDate><guid>/posts/node-email-trial/</guid><description>上周简单地试用了几个邮件获取协议的Node modules来实现获取qq邮件的邮件数据的功能，以备接下来的工作使用。 POP3 POP3全称为Post Office Protocol vers</description></item><item><title>MongoDB图片存储测试</title><link>/posts/test-persistent-image-file-in-mongodb/</link><pubDate>Tue, 16 Jun 2015 02:20:10 +0000</pubDate><guid>/posts/test-persistent-image-file-in-mongodb/</guid><description>Web应用中对于图片的存储方案一直是存放在CDN或者服务器的文件系统中，通过索引数据库中的文件路径，分步获得资源后再响应客户端的请求。MongoDB这</description></item><item><title>MongoDB理论浅入浅出</title><link>/posts/the-mongodb-tempter/</link><pubDate>Tue, 09 Jun 2015 10:30:28 +0000</pubDate><guid>/posts/the-mongodb-tempter/</guid><description>最近老板揽到了大数据的大项目，需要写写写写写MongoDB的设计方案，这段时间就恶补了MongoDB数据库的相关知识。本篇文章抛开以前使用MongoD</description></item><item><title>Node.js的事件驱动模型</title><link>/posts/nodejs-event-model/</link><pubDate>Sat, 09 May 2015 03:41:16 +0000</pubDate><guid>/posts/nodejs-event-model/</guid><description>Node利用Javascript的特性，比如Continuation Passing Style(CPS)以及Event Loop，使得程序运行时表现优秀，CPS和Ev</description></item><item><title>闲着蛋疼：将Ghost升级到0.6.2</title><link>/posts/kick-ass-update-ghost/</link><pubDate>Tue, 28 Apr 2015 12:08:00 +0000</pubDate><guid>/posts/kick-ass-update-ghost/</guid><description>最近在中文网看到了新版本的Ghost，诱惑我的新功能还比较多。一口气从0.5.x升级到0.6.2(中间参照官网以0.6.0作为过渡版本)。满怀欣喜地上</description></item><item><title>Leetcode 编程训练[5]:Longest Palindromic Substring</title><link>/posts/leetcode-longest-palindromic-substring/</link><pubDate>Sun, 12 Apr 2015 15:14:49 +0000</pubDate><guid>/posts/leetcode-longest-palindromic-substring/</guid><description>#5：这次的题目的要求是在字符串中找到最长的回文字符串。例如在&amp;rsquo;abcxzcvczxziua&amp;rsquo;中获得&amp;rsquo;xzcvcz</description></item><item><title>Leetcode 编程训练[4]:Median of Two Sorted Arrays</title><link>/posts/leetcode-median-of-two-sorted-arrays/</link><pubDate>Mon, 30 Mar 2015 13:11:36 +0000</pubDate><guid>/posts/leetcode-median-of-two-sorted-arrays/</guid><description>#4：这次的题目比较难：找到两个有序数组A(大小为m)、B(大小为n)的中位数，并且整体时间复杂度为O(log(m+n))。查看提示，这道题与分治法、</description></item><item><title>tty.js:实现Web Terminal</title><link>/posts/tty-web-terminal/</link><pubDate>Fri, 27 Mar 2015 02:50:24 +0000</pubDate><guid>/posts/tty-web-terminal/</guid><description>上次使用Socket.io进行前后端的实时连接，这次介绍一个Node.JS编写的工具来实现浏览器来远程连接Linux。通过这个软件我们就可以抛弃put</description></item><item><title>Leetcode 编程训练[3]:Longest Substring Without Repeating Characters</title><link>/posts/goto-leetcode-longest-substring-without-repeating-characters/</link><pubDate>Wed, 25 Mar 2015 15:12:41 +0000</pubDate><guid>/posts/goto-leetcode-longest-substring-without-repeating-characters/</guid><description>#3：题目为求出最长没有重复字符的字符串，输出最大长度。还是比较容易的，主要是注意JS的字符串操作就行了。 比如字符串的属性.length表示该字符串的</description></item><item><title>Leetcode 编程训练[2]:Add Two Numbers</title><link>/posts/goto-leetcode-add-two-numbers/</link><pubDate>Tue, 24 Mar 2015 15:23:43 +0000</pubDate><guid>/posts/goto-leetcode-add-two-numbers/</guid><description>#2：题目要求是输入两个单链表，按位相加（过十向后加一）。最后输出一个单链表。数据结构已经给出。在JS中一切皆函数，对象也是函数。 function ListNode(val) { this.val = val; this.next = null; }</description></item><item><title>Leetcode 编程训练[1]:Two Sum</title><link>/posts/goto-leetcode-two-sum/</link><pubDate>Mon, 23 Mar 2015 12:48:43 +0000</pubDate><guid>/posts/goto-leetcode-two-sum/</guid><description>#1: 题目要求是接收两个参数，一个数组参数存放整型数据，另一个参数为整型变量。我们需要找到两个数组内的数字，相加为整型参数，并返回这两个数字的位置。并且，</description></item><item><title>Socket.io:有点意思</title><link>/posts/socketio-of-interest/</link><pubDate>Sat, 21 Mar 2015 15:51:32 +0000</pubDate><guid>/posts/socketio-of-interest/</guid><description>下面页面就是使用Socket.io制作的口袋妖怪游戏(默认小屏下已隐藏，请切换到大分辨率查看)。左边是游戏画面，右边是按键表和聊天室。画面达到红蓝版本</description></item><item><title>Linux下设置Mysql远程连接</title><link>/posts/linux-mysql-remote-access/</link><pubDate>Thu, 05 Mar 2015 08:03:29 +0000</pubDate><guid>/posts/linux-mysql-remote-access/</guid><description>最近使用mysql比较多，常用的功能记录一下 1.首先加入mysql命令行 2.输入权限命令 mysql&amp;gt; G(BAE和谐)RANT ALL PRIVILEGES on *.* to username@'IP address' identified by 'password'; 这条命令的意思依</description></item><item><title>MEAN Stack:创建RESTful web service</title><link>/posts/mean-create-restful-web-service/</link><pubDate>Thu, 29 Jan 2015 08:54:44 +0000</pubDate><guid>/posts/mean-create-restful-web-service/</guid><description>前段时间做了DTREE项目中的前后端数据存储功能，在原有的ngController上进行HTTP请求，后端接受到请求后再存储到mongoDB上。现将学</description></item><item><title>在EC2上安装MEAN环境</title><link>/posts/run-mean-on-ec2/</link><pubDate>Thu, 22 Jan 2015 02:23:18 +0000</pubDate><guid>/posts/run-mean-on-ec2/</guid><description>搭建决策树项目外网DEMO尝试几个地方后，最后选择了EC2(Amazon Elastic Compute Cloud)。选择的是最经济便宜的Amazon Linux AMI系统t2.micro</description></item><item><title>CentOS 6.3安装NodeJS环境</title><link>/posts/centos-install-nodejs/</link><pubDate>Tue, 23 Dec 2014 03:20:00 +0000</pubDate><guid>/posts/centos-install-nodejs/</guid><description>最近开始学习在linux下配置NodeJS环境 安装工具 在安装前，可以先用检查是否已安装下列软件 # yum list installed | grep &amp;quot;软件名或者包名&amp;quot; gcc</description></item><item><title>NodeJS:树的序列化</title><link>/posts/nodejs-serialize-dtree/</link><pubDate>Sat, 20 Dec 2014 11:47:00 +0000</pubDate><guid>/posts/nodejs-serialize-dtree/</guid><description>接着上周的工作，我们把上周反序列得到的dtree对象输出到JSON，再将其序列化后存入MongoDB。 存入文档 先将上次得到的决策树对象整个保存到JSO</description></item><item><title>NodeJS:树的反序列化</title><link>/posts/nodejs-deserialize-dtree/</link><pubDate>Mon, 15 Dec 2014 15:15:52 +0000</pubDate><guid>/posts/nodejs-deserialize-dtree/</guid><description>树的反序列化就是将序列数组安装线索组成树结构，今次项目数据库存储决策节点的方式是通过数组进行，每个节点有一个parent_id键直指双亲节点的node</description></item><item><title>NodeJS学习：爬虫小探补完计划</title><link>/posts/nodejs-crawler-is-better/</link><pubDate>Sat, 06 Dec 2014 13:40:11 +0000</pubDate><guid>/posts/nodejs-crawler-is-better/</guid><description>书接上回，我们需要修改程序以达到连续抓取40个页面的内容。也就是说我们需要输出每篇文章的标题、链接、第一条评论、评论用户和论坛积分。 如图所示，$('.</description></item><item><title>NodeJS学习：爬虫小探</title><link>/posts/nodejs-crawler-demo/</link><pubDate>Sun, 30 Nov 2014 09:38:02 +0000</pubDate><guid>/posts/nodejs-crawler-demo/</guid><description>今天来学习alsotang的爬虫教程，跟着把CNode简单地爬一遍。 建立项目craelr-demo 我们首先建立一个Express项目，然后将app.j</description></item><item><title>依赖包bcrypt安装Issues</title><link>/posts/install-bcrypt-issues/</link><pubDate>Fri, 28 Nov 2014 08:38:49 +0000</pubDate><guid>/posts/install-bcrypt-issues/</guid><description>在决策树项目中，使用到了bcrypt依赖包来加密文件。在wini8(win7)部署安装这个依赖的时候容易出现出现了问题。 解决方法：安装Visual Studio 2012</description></item><item><title>Mongoose:Schema之路</title><link>/posts/the-way-to-mongoose-schema/</link><pubDate>Wed, 12 Nov 2014 06:54:49 +0000</pubDate><guid>/posts/the-way-to-mongoose-schema/</guid><description>连续放了6天假，磕磕碰碰地进行着决策树的数据库设计和读写，其中遇到了不少问题。本文分为两部分，第一部分是介绍Mongoose的使用，第二部分是项目中遇</description></item><item><title>在Heroku上部署MEAN</title><link>/posts/zai-herokushang-bu-shu-mean/</link><pubDate>Thu, 06 Nov 2014 09:00:32 +0000</pubDate><guid>/posts/zai-herokushang-bu-shu-mean/</guid><description>Heroku是国外普遍使用大受好评的PaaS，支持Nodejs，基础服务（Nodejs+MongoDB）基本都是免费的。搭建MEAN框架也不怎么费劲。</description></item><item><title>搜索控：NP完全问题</title><link>/posts/sou-suo-kon-npwan-quan-wen-ti/</link><pubDate>Wed, 05 Nov 2014 09:30:41 +0000</pubDate><guid>/posts/sou-suo-kon-npwan-quan-wen-ti/</guid><description>NP完全问题是学习算法分析遇到的概念，一般和P类问题、NP问题一起出场。我们老师当年已经在投影上打出了一大堆数学的推导公式来。我们先从他们的形式化定义</description></item><item><title>是时候迁移到ACE了</title><link>/posts/bo-ke-qian-yi-dao-aceliao/</link><pubDate>Fri, 31 Oct 2014 08:35:19 +0000</pubDate><guid>/posts/bo-ke-qian-yi-dao-aceliao/</guid><description>最近手贱把ghost升级到了0.5.3(新添的小功能并不少，最主要的后台界面的修改)，但是BAE强大的，修改了pool参数来解决长连接的问题还是报错不</description></item><item><title>全栈式框架的选择：MEAN or MEANS?</title><link>/posts/quan-zhan-shi-kuang-jia-de-xuan-ze-mean-or-means/</link><pubDate>Mon, 27 Oct 2014 12:38:40 +0000</pubDate><guid>/posts/quan-zhan-shi-kuang-jia-de-xuan-ze-mean-or-means/</guid><description>这两个月一直在进行sails后端开发，其中遇到的问题不断。放在研究用户访问控制矸例程上的时间太多，最后也没用弄出什么东西来。遂推荐降一级使用Expre</description></item><item><title>在Windows下启动mongodb服务</title><link>/posts/zai-windowsxia-qi-dong-mongodbfu-wu/</link><pubDate>Sun, 26 Oct 2014 11:21:06 +0000</pubDate><guid>/posts/zai-windowsxia-qi-dong-mongodbfu-wu/</guid><description>最近在做项目的访问控制，开始使用mongoDB来存储数据。而我在Windows下一直是手动启动mongoDB的服务(\bin\mongod.exe)，</description></item><item><title>php学习：给CI框架添加验证码</title><link>/posts/phpxue-xi-gei-cikuang-jia-tian-jia-yan-zheng-ma/</link><pubDate>Mon, 06 Oct 2014 14:32:38 +0000</pubDate><guid>/posts/phpxue-xi-gei-cikuang-jia-tian-jia-yan-zheng-ma/</guid><description>这篇笔记是上个月给robin添加验证码功能的记录。起初在网上搜索php的验证码例程，最后在CodeIgniter论坛找到了别人写好的库，果断拿来使用了</description></item><item><title>开学的风飘过来了~</title><link>/posts/kai-xue-de-feng-piao-guo-lai-liao/</link><pubDate>Sun, 21 Sep 2014 12:40:57 +0000</pubDate><guid>/posts/kai-xue-de-feng-piao-guo-lai-liao/</guid><description>这周忙着开学的事情，在技术上并没有花太多的时间。时间主要花在听讲座报告论坛和准备成果展。 听别人说 这周总共听了20来位或是老师或是教授的发言，对我印象深</description></item><item><title>nodejs学习：sails框架的学习</title><link>/posts/nodejsxue-xi-sailskuang-jia-de-xue-xi/</link><pubDate>Sun, 14 Sep 2014 13:20:35 +0000</pubDate><guid>/posts/nodejsxue-xi-sailskuang-jia-de-xue-xi/</guid><description>上周通过搭建CMS系统接触到了sails框架，知道一些ORM的概念。这周开始深入后台数据交互，发现twenty框架的数据结构在sails上又设计了一番</description></item><item><title>nodejs学习：师哥自家的twenty博客框架</title><link>/posts/nodejsxue-xi-shi-ge-zi-jia-de-twentybo-ke-kuang-jia/</link><pubDate>Mon, 08 Sep 2014 15:30:01 +0000</pubDate><guid>/posts/nodejsxue-xi-shi-ge-zi-jia-de-twentybo-ke-kuang-jia/</guid><description>这周继续为DTree项目预热，学习sails框架的搭建和结构熟悉。正好师哥在做一个nodejs的CMS框架twenty，他们用的就是sails框架。 结</description></item><item><title>成功在BAE上部署ghost 5.0</title><link>/posts/cheng-gong-zai-baeshang-bu-shu-ghost-5-0/</link><pubDate>Sat, 06 Sep 2014 15:39:25 +0000</pubDate><guid>/posts/cheng-gong-zai-baeshang-bu-shu-ghost-5-0/</guid><description>这周摸索着网站的建设，终于在今天成功上线！这里要谢谢ghost中文网和群里的网友，他的博客在这opengiser。他们的帮助太重要了。现在把过程记录下</description></item></channel></rss>