<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nodejs on Edwardesire</title><link>/tags/nodejs/</link><description>Recent content in Nodejs on Edwardesire</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="https://www.edwardesire.com/">Edward Desire&lt;/a></copyright><lastBuildDate>Sun, 18 Dec 2016 14:54:03 +0000</lastBuildDate><atom:link href="/tags/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>实验室简明mongoDB用户体验指南·续——查询</title><link>/posts/user-experience-of-mongodb-query/</link><pubDate>Sun, 18 Dec 2016 14:54:03 +0000</pubDate><guid>/posts/user-experience-of-mongodb-query/</guid><description>上篇： 2015-12-22 blog: 从MongoDB入门到编写数据库相关API 本指南延续上篇的内容，带领大家使用MongoDB Node.js Driver进行应用开发。 Node.js Driver与Mon</description></item><item><title>GraphQL Resovler的执行与实践</title><link>/posts/graphql-resovler-execution-and-practice/</link><pubDate>Wed, 30 Nov 2016 03:19:30 +0000</pubDate><guid>/posts/graphql-resovler-execution-and-practice/</guid><description>本文首先介绍GraphQL Server对于查询的执行过程，然后结合实际开发使用GraphQL的相关特性。 GraphQL Execution 在执行查询前，GraphQL会先通过类型系</description></item><item><title>GraphQL：一种不同于REST的接口风格</title><link>/posts/experimental-graphql/</link><pubDate>Wed, 23 Nov 2016 14:47:10 +0000</pubDate><guid>/posts/experimental-graphql/</guid><description>从去年开始，JS算是完全踏入ES6时代。在React相关项目中接触到了一些ES6的语法。这次接着GraphQL这种新型的接口风格，从后端的角度接触ES</description></item><item><title>在Docker搭建Node.js+mongoDB开发环境</title><link>/posts/docker/</link><pubDate>Mon, 25 Apr 2016 08:29:19 +0000</pubDate><guid>/posts/docker/</guid><description>这周通过docker将整个技术栈更新一下，首先介绍Docker的基本概念。 Docker是在LXC上构建的容器引擎。我这里主要讲起当作更加灵巧的虚拟机用</description></item><item><title>北京3月26日NodeParty分享会总结（Node.js全栈、探针监控、Docker node）</title><link>/posts/beijing-nodeparty/</link><pubDate>Thu, 07 Apr 2016 08:13:19 +0000</pubDate><guid>/posts/beijing-nodeparty/</guid><description>上周参加了北京的NodeParty，收获还是有的。先将学到的总结，并补充一些node.js的内容。 #1. 全栈工程师之路 首先ppt奉上。演讲者为moajs的</description></item><item><title>从MongoDB入门到编写数据库相关API</title><link>/posts/code-to-meanjs/</link><pubDate>Tue, 22 Dec 2015 15:45:55 +0000</pubDate><guid>/posts/code-to-meanjs/</guid><description>这篇文章为实验室开会本人讲解mongoDB的讲义，主要讲述两个内容：MongoDB的入门和Nodejs编写相关API入门。内容比较简单，但是实践性比较</description></item><item><title>使用Async进行流程控制</title><link>/posts/controller-of-async-function/</link><pubDate>Fri, 23 Oct 2015 13:26:06 +0000</pubDate><guid>/posts/controller-of-async-function/</guid><description>Async[1]提供了一些使用的工具，比如对象操作以及流程控制。我使用它的原因主要是解决js中回调函数嵌套过多的问题，在一边使用一边学习中习得了更多的</description></item><item><title>MongoDB更新操作符的实践</title><link>/posts/mongodb-update-operators-apply/</link><pubDate>Tue, 20 Oct 2015 14:55:40 +0000</pubDate><guid>/posts/mongodb-update-operators-apply/</guid><description>和查询操作符类似，更新操作符处理最复杂的对象也是数组。我们按照上一篇文章的方法，先总结我所用到的操作符，再结合项目中遇到的实例组合使用操作符。 ####1. 字段更</description></item><item><title>MongoDB查询以及投影操作符的实践</title><link>/posts/mongodb-query-and-projection-operators-apply/</link><pubDate>Sun, 18 Oct 2015 05:18:44 +0000</pubDate><guid>/posts/mongodb-query-and-projection-operators-apply/</guid><description>当使用MongoDB提供复制操作时，需要简单的CURD操作基础上使用一些操作符(如同$eq这样的操作符)，mongoDB官网文档[1]有其详细介绍。需</description></item><item><title>初识Promise</title><link>/posts/introduction-of-promise/</link><pubDate>Fri, 25 Sep 2015 09:49:44 +0000</pubDate><guid>/posts/introduction-of-promise/</guid><description>对于mongoBD的异步控制，在项目实践中使用了async库来控制复杂的异步回调函数处理。很有幸参加i5ting老师的《Node.js最新技术栈之Pr</description></item><item><title>Web应用分页功能的简单实现</title><link>/posts/pagination-with-mongoose/</link><pubDate>Tue, 15 Sep 2015 09:25:53 +0000</pubDate><guid>/posts/pagination-with-mongoose/</guid><description>Web应用的一个简单分页功能，前端直接使用bootstrap的Pagination指令，后端通过nodejs的mongoose驱动skip()和lim</description></item><item><title>Node.js的试炼:Email的获取</title><link>/posts/node-email-trial/</link><pubDate>Thu, 25 Jun 2015 15:50:30 +0000</pubDate><guid>/posts/node-email-trial/</guid><description>上周简单地试用了几个邮件获取协议的Node modules来实现获取qq邮件的邮件数据的功能，以备接下来的工作使用。 POP3 POP3全称为Post Office Protocol vers</description></item><item><title>MongoDB图片存储测试</title><link>/posts/test-persistent-image-file-in-mongodb/</link><pubDate>Tue, 16 Jun 2015 02:20:10 +0000</pubDate><guid>/posts/test-persistent-image-file-in-mongodb/</guid><description>Web应用中对于图片的存储方案一直是存放在CDN或者服务器的文件系统中，通过索引数据库中的文件路径，分步获得资源后再响应客户端的请求。MongoDB这</description></item><item><title>Node.js的事件驱动模型</title><link>/posts/nodejs-event-model/</link><pubDate>Sat, 09 May 2015 03:41:16 +0000</pubDate><guid>/posts/nodejs-event-model/</guid><description>Node利用Javascript的特性，比如Continuation Passing Style(CPS)以及Event Loop，使得程序运行时表现优秀，CPS和Ev</description></item><item><title>tty.js:实现Web Terminal</title><link>/posts/tty-web-terminal/</link><pubDate>Fri, 27 Mar 2015 02:50:24 +0000</pubDate><guid>/posts/tty-web-terminal/</guid><description>上次使用Socket.io进行前后端的实时连接，这次介绍一个Node.JS编写的工具来实现浏览器来远程连接Linux。通过这个软件我们就可以抛弃put</description></item><item><title>Socket.io:有点意思</title><link>/posts/socketio-of-interest/</link><pubDate>Sat, 21 Mar 2015 15:51:32 +0000</pubDate><guid>/posts/socketio-of-interest/</guid><description>下面页面就是使用Socket.io制作的口袋妖怪游戏(默认小屏下已隐藏，请切换到大分辨率查看)。左边是游戏画面，右边是按键表和聊天室。画面达到红蓝版本</description></item><item><title>MEAN Stack:创建RESTful web service</title><link>/posts/mean-create-restful-web-service/</link><pubDate>Thu, 29 Jan 2015 08:54:44 +0000</pubDate><guid>/posts/mean-create-restful-web-service/</guid><description>前段时间做了DTREE项目中的前后端数据存储功能，在原有的ngController上进行HTTP请求，后端接受到请求后再存储到mongoDB上。现将学</description></item><item><title>在EC2上安装MEAN环境</title><link>/posts/run-mean-on-ec2/</link><pubDate>Thu, 22 Jan 2015 02:23:18 +0000</pubDate><guid>/posts/run-mean-on-ec2/</guid><description>搭建决策树项目外网DEMO尝试几个地方后，最后选择了EC2(Amazon Elastic Compute Cloud)。选择的是最经济便宜的Amazon Linux AMI系统t2.micro</description></item><item><title>CentOS 6.3安装NodeJS环境</title><link>/posts/centos-install-nodejs/</link><pubDate>Tue, 23 Dec 2014 03:20:00 +0000</pubDate><guid>/posts/centos-install-nodejs/</guid><description>最近开始学习在linux下配置NodeJS环境 安装工具 在安装前，可以先用检查是否已安装下列软件 # yum list installed | grep &amp;quot;软件名或者包名&amp;quot; gcc</description></item><item><title>NodeJS:树的序列化</title><link>/posts/nodejs-serialize-dtree/</link><pubDate>Sat, 20 Dec 2014 11:47:00 +0000</pubDate><guid>/posts/nodejs-serialize-dtree/</guid><description>接着上周的工作，我们把上周反序列得到的dtree对象输出到JSON，再将其序列化后存入MongoDB。 存入文档 先将上次得到的决策树对象整个保存到JSO</description></item><item><title>NodeJS:树的反序列化</title><link>/posts/nodejs-deserialize-dtree/</link><pubDate>Mon, 15 Dec 2014 15:15:52 +0000</pubDate><guid>/posts/nodejs-deserialize-dtree/</guid><description>树的反序列化就是将序列数组安装线索组成树结构，今次项目数据库存储决策节点的方式是通过数组进行，每个节点有一个parent_id键直指双亲节点的node</description></item><item><title>NodeJS学习：爬虫小探补完计划</title><link>/posts/nodejs-crawler-is-better/</link><pubDate>Sat, 06 Dec 2014 13:40:11 +0000</pubDate><guid>/posts/nodejs-crawler-is-better/</guid><description>书接上回，我们需要修改程序以达到连续抓取40个页面的内容。也就是说我们需要输出每篇文章的标题、链接、第一条评论、评论用户和论坛积分。 如图所示，$('.</description></item><item><title>NodeJS学习：爬虫小探</title><link>/posts/nodejs-crawler-demo/</link><pubDate>Sun, 30 Nov 2014 09:38:02 +0000</pubDate><guid>/posts/nodejs-crawler-demo/</guid><description>今天来学习alsotang的爬虫教程，跟着把CNode简单地爬一遍。 建立项目craelr-demo 我们首先建立一个Express项目，然后将app.j</description></item><item><title>依赖包bcrypt安装Issues</title><link>/posts/install-bcrypt-issues/</link><pubDate>Fri, 28 Nov 2014 08:38:49 +0000</pubDate><guid>/posts/install-bcrypt-issues/</guid><description>在决策树项目中，使用到了bcrypt依赖包来加密文件。在wini8(win7)部署安装这个依赖的时候容易出现出现了问题。 解决方法：安装Visual Studio 2012</description></item><item><title>Mongoose:Schema之路</title><link>/posts/the-way-to-mongoose-schema/</link><pubDate>Wed, 12 Nov 2014 06:54:49 +0000</pubDate><guid>/posts/the-way-to-mongoose-schema/</guid><description>连续放了6天假，磕磕碰碰地进行着决策树的数据库设计和读写，其中遇到了不少问题。本文分为两部分，第一部分是介绍Mongoose的使用，第二部分是项目中遇</description></item><item><title>在Heroku上部署MEAN</title><link>/posts/zai-herokushang-bu-shu-mean/</link><pubDate>Thu, 06 Nov 2014 09:00:32 +0000</pubDate><guid>/posts/zai-herokushang-bu-shu-mean/</guid><description>Heroku是国外普遍使用大受好评的PaaS，支持Nodejs，基础服务（Nodejs+MongoDB）基本都是免费的。搭建MEAN框架也不怎么费劲。</description></item><item><title>是时候迁移到ACE了</title><link>/posts/bo-ke-qian-yi-dao-aceliao/</link><pubDate>Fri, 31 Oct 2014 08:35:19 +0000</pubDate><guid>/posts/bo-ke-qian-yi-dao-aceliao/</guid><description>最近手贱把ghost升级到了0.5.3(新添的小功能并不少，最主要的后台界面的修改)，但是BAE强大的，修改了pool参数来解决长连接的问题还是报错不</description></item><item><title>nodejs学习：sails框架的学习</title><link>/posts/nodejsxue-xi-sailskuang-jia-de-xue-xi/</link><pubDate>Sun, 14 Sep 2014 13:20:35 +0000</pubDate><guid>/posts/nodejsxue-xi-sailskuang-jia-de-xue-xi/</guid><description>上周通过搭建CMS系统接触到了sails框架，知道一些ORM的概念。这周开始深入后台数据交互，发现twenty框架的数据结构在sails上又设计了一番</description></item><item><title>nodejs学习：师哥自家的twenty博客框架</title><link>/posts/nodejsxue-xi-shi-ge-zi-jia-de-twentybo-ke-kuang-jia/</link><pubDate>Mon, 08 Sep 2014 15:30:01 +0000</pubDate><guid>/posts/nodejsxue-xi-shi-ge-zi-jia-de-twentybo-ke-kuang-jia/</guid><description>这周继续为DTree项目预热，学习sails框架的搭建和结构熟悉。正好师哥在做一个nodejs的CMS框架twenty，他们用的就是sails框架。 结</description></item><item><title>成功在BAE上部署ghost 5.0</title><link>/posts/cheng-gong-zai-baeshang-bu-shu-ghost-5-0/</link><pubDate>Sat, 06 Sep 2014 15:39:25 +0000</pubDate><guid>/posts/cheng-gong-zai-baeshang-bu-shu-ghost-5-0/</guid><description>这周摸索着网站的建设，终于在今天成功上线！这里要谢谢ghost中文网和群里的网友，他的博客在这opengiser。他们的帮助太重要了。现在把过程记录下</description></item></channel></rss>