<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operator on Edwardesire</title><link>/tags/operator/</link><description>Recent content in Operator on Edwardesire</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="https://www.edwardesire.com/">Edward Desire&lt;/a></copyright><lastBuildDate>Tue, 14 May 2019 06:50:13 +0000</lastBuildDate><atom:link href="/tags/operator/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes编程范式——Controller pattern</title><link>/posts/kubernetesbian-controller-pattern/</link><pubDate>Tue, 14 May 2019 06:50:13 +0000</pubDate><guid>/posts/kubernetesbian-controller-pattern/</guid><description>引子 Kubernetes的定位是非常明确和简单的，就是容器的编排与调度管理的系统。Kubernetes所关注的核心就是容器（Container）。Ku</description></item><item><title>Intro Operator</title><link>/posts/intro-operator/</link><pubDate>Mon, 07 Jan 2019 15:02:42 +0000</pubDate><guid>/posts/intro-operator/</guid><description>What is Operator 我们知道容器技术的发展带来了开发流程的简化：开发者不再需要费尽心力地将应用部署到不同环境下，真正所要做的只需完成核心业务的开发然后构建应用的镜像</description></item></channel></rss>