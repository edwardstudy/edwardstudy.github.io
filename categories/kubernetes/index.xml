<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Edwardesire</title><link>/categories/kubernetes/</link><description>Recent content in Kubernetes on Edwardesire</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021 &lt;a href="https://www.edwardesire.com/">Edward Desire&lt;/a></copyright><lastBuildDate>Thu, 14 Jul 2022 10:55:26 +0800</lastBuildDate><atom:link href="/categories/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>记一次Service Endpoints与容器网络的碰撞</title><link>/posts/crash-into-endpoints-between-cni-in-k8s/</link><pubDate>Thu, 14 Jul 2022 10:55:26 +0800</pubDate><guid>/posts/crash-into-endpoints-between-cni-in-k8s/</guid><description>问题描述 服务的部署形式是三副本，每个pod包含2个容器。一个容器A通过k8s lease资源选主。一个容器B通过service对外提供服务，通过read</description></item><item><title>k8s单机侧的驱逐策略总结</title><link>/posts/process-eviction-under-k8s/</link><pubDate>Tue, 07 Jun 2022 14:27:08 +0800</pubDate><guid>/posts/process-eviction-under-k8s/</guid><description>进程驱逐：当机器存在资源压力时，可能是由于有恶意程序在消耗系统资源，或者是overcommit导致。系统通过控制机器上的进程存活来减少单个程序对系统的</description></item><item><title>k8s中管理CPU资源管理的动态</title><link>/posts/the-trending-of-cpu-management-in-k8s/</link><pubDate>Wed, 23 Mar 2022 10:38:03 +0800</pubDate><guid>/posts/the-trending-of-cpu-management-in-k8s/</guid><description>k8s的cpuManager完成节点侧的cpu资源分配和隔离（core pinning and isolation，如何做到隔离）。 发现机器上的cpu拓扑 上报给k8s层机器</description></item><item><title>资源拓扑感知调度方案</title><link>/posts/node-resource-topology-aware-scheduling/</link><pubDate>Wed, 23 Feb 2022 14:44:54 +0800</pubDate><guid>/posts/node-resource-topology-aware-scheduling/</guid><description>之前文章分析过Volcano的NUMA拓扑资源调度的设计，这次扒一扒社区scheduling sig设计的一种方案。这个方案由Red Hat主导，通过两个</description></item><item><title>Volcano的NUMA感知调度实现</title><link>/posts/numa-aware-scheduling-in-volcano/</link><pubDate>Sun, 19 Dec 2021 16:40:48 +0800</pubDate><guid>/posts/numa-aware-scheduling-in-volcano/</guid><description>接上篇文章，调研Volcano的NUMA感知调度实现。 因为kubelet没有将cpu/等资源的拓扑信息暴露，所以volcano的方式是通过CRD Num</description></item><item><title>k8s资源拓扑感知——资源分配</title><link>/posts/k8s-resources-topology-manager/</link><pubDate>Mon, 13 Dec 2021 16:00:48 +0800</pubDate><guid>/posts/k8s-resources-topology-manager/</guid><description>NUMA是什么 非统一内存访问架构（NUMA，Non-uniform memory access）是一种共享内存架构。与之相对的是统一内存访问架构（UMA，Unifo</description></item><item><title>多集群调度</title><link>/posts/multi-cluster-scheduling/</link><pubDate>Sun, 14 Nov 2021 04:30:48 +0800</pubDate><guid>/posts/multi-cluster-scheduling/</guid><description>Kubernetes是一个容器编排平台，用于调度、部署和管理容器化应用。并且经过几年的发展，k8s已经成为事实上的容器编排平台标准。集群是k8s架构的</description></item><item><title>集群内负载调度方案调研</title><link>/posts/load-scheduling-brief/</link><pubDate>Mon, 24 May 2021 01:03:36 +0000</pubDate><guid>/posts/load-scheduling-brief/</guid><description>背景 资源调度是容器云平台中最核心的功能之一。为了满足各业务线的资源需求，调度系统需要选择合适的集群分配计算资源，支撑业务服务的运行。 Kubernete</description></item><item><title>解决Kubernetes admission webhook timeout error</title><link>/posts/jie-jue-kubernetes-admission-webhook-timeout-error/</link><pubDate>Tue, 30 Jun 2020 01:15:56 +0000</pubDate><guid>/posts/jie-jue-kubernetes-admission-webhook-timeout-error/</guid><description>最近在做cluster chaos test，我们的功能组件出现不可用的情况。原因是Kubernetes admission webhook在执行中出现连接拒绝访问和timeout的</description></item><item><title>cf-operator的介绍</title><link>/posts/intro-of-cf-operator/</link><pubDate>Fri, 06 Sep 2019 15:21:18 +0000</pubDate><guid>/posts/intro-of-cf-operator/</guid><description>cf-operator马上就要在近期宣布beta release。beta版会实现在Kuberntes上部署Cloud Foundry或者BOSH rele</description></item><item><title>Kubernetes编程范式——Controller pattern</title><link>/posts/kubernetesbian-controller-pattern/</link><pubDate>Tue, 14 May 2019 06:50:13 +0000</pubDate><guid>/posts/kubernetesbian-controller-pattern/</guid><description>引子 Kubernetes的定位是非常明确和简单的，就是容器的编排与调度管理的系统。Kubernetes所关注的核心就是容器（Container）。Ku</description></item><item><title>Intro Operator</title><link>/posts/intro-operator/</link><pubDate>Mon, 07 Jan 2019 15:02:42 +0000</pubDate><guid>/posts/intro-operator/</guid><description>What is Operator 我们知道容器技术的发展带来了开发流程的简化：开发者不再需要费尽心力地将应用部署到不同环境下，真正所要做的只需完成核心业务的开发然后构建应用的镜像</description></item><item><title>双机环境部署Kubernetes</title><link>/posts/deploy-kubernetes-by-kubeadm/</link><pubDate>Sun, 27 Aug 2017 08:56:15 +0000</pubDate><guid>/posts/deploy-kubernetes-by-kubeadm/</guid><description>本文使用kubeadm在虚机上部署一master一node的Kubernetes（k8s）集群。 0x01 环境 首先是创建环境，笔者使用的是两台8核8G内存的虚</description></item></channel></rss>